# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- dev

jobs:
  # Example job that runs end-to-end tests using Cypress test runner
  #   https://www.cypress.io/

  # Job names can contain alphanumeric characters and '_', cannot start with a number
  - job: Cypress
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '20.x'
        displayName: 'Install Node.js'
    
      # NPM modules and Cypress binary should be cached
      # otherwise the install will be too slow
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/caching/?view=azure-devops
      # since the username / user home directory are not available via system variables
      # (there is even an open question about it)
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops
      # just use "/home/vsts" for now
      - task: CacheBeta@1
        inputs:
          key: version2 | npm | $(Agent.OS) | package-lock.json
          path: /home/vsts/.npm
          restoreKeys: version2 | $(Agent.OS) | package-lock.json
        displayName: Cache NPM packages

      - task: CacheBeta@1
        inputs:
          key: version2 | cypress | $(Agent.OS) | package-lock.json
          path: /home/vsts/.cache/Cypress
          restoreKeys: version2 | $(Agent.OS) | package-lock.json
        displayName: Cache Cypress binary

      - script: npm ci
        displayName: 'Install NPM dependencies'

      - script: npm run cy:verify
        displayName: 'Cypress verify'
      
      - script: |
          npm run executa
          cp -R cypress/screenshots/* $(Build.ArtifactStagingDirectory)
        displayName: 'Executar Testes e2e'
        continueOnError: true
        # failOnStderr: true

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)
          artifactName: Screenshots
        displayName: 'Copiar Screenshots de erros'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/TEST-*.xml'
          testRunTitle: 'Teste de Regress√£o'
          mergeTestResults: true
          publishRunAttachments: true
        displayName: Publicar Resultados de Teste